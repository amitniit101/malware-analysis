# Action 1: Remove Terminated Backup Owner
df["new_extensionAttribute10"] = df["extensionAttribute10"].where(~((df["EA8's Status"] == 'A') & (df["EA10's Status"] == 'T')), "")
df["ActionItemStatus"] = df["ActionItemStatus"].where(~((df["EA8's Status"] == 'A') & (df["EA10's Status"] == 'T')), "Removed Terminated backup owner")

# Action 2: Update Backup Owner to Primary Owner
df["new_extensionAttribute8"] = df.apply(lambda row: row["extensionAttribute10"] if ((row["EA8's Status"] == 'T') and (row["EA8's Status"] != 'PRIV') and (row["EA10's Status"] == 'A')) else row["extensionAttribute8"], axis=1)
df["new_extensionAttribute10"] = df.apply(lambda row: "" if ((row["EA8's Status"] == 'T') and (row["EA8's Status"] != 'PRIV') and (row["EA10's Status"] == 'A')) else row["extensionAttribute10"], axis=1)
df["ActionItemStatus"] = df["ActionItemStatus"].where(~((df["EA8's Status"] == 'T') & (df["EA8's Status"] != 'PRIV') & (df["EA10's Status"] == 'A')), "Updated Backup owner as primary")

# Action 3: Find New Owner and Update Ownership
df["new_extensionAttribute8"] = df.apply(lambda row: row["EA8 Manager's Manager"] if ((row["EA8's Status"] == 'T') and (row["EA10's Status"] == 'T') and (row["EA8 Manager's Status"] == 'A') and (row["EA8's Manager Executive?"] == 'No')) else row["new_extensionAttribute8"], axis=1)
df["ActionItemStatus"] = df["ActionItemStatus"].where(~((df["EA8's Status"] == 'T') & (df["EA10's Status"] == 'T') & (df["EA8 Manager's Status"] == 'A') & (df["EA8's Manager Executive?"] == 'No')), "Termed owner's manager set as new owner")

df["new_extensionAttribute10"] = df.apply(lambda row: row["EA10's Manager ID"] if ((row["extensionAttribute8"] == 'PRIV') and (row["EA10's Manager's Status"] == 'A') and (row["EA10's Manager Executive?"] == 'No')) else row["new_extensionAttribute10"], axis=1)
df["ActionItemStatus"] = df["ActionItemStatus"].where(~((df["extensionAttribute8"] == 'PRIV') and (df["EA10's Manager's Status"] == 'A') and (df["EA10's Manager Executive?"] == 'No')), "Termed owner's manager set as new owner")

# Display the updated DataFrame
print(df)
